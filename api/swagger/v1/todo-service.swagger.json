{
  "swagger": "2.0",
  "info": {
    "title": "ToDo service",
    "version": "1.0",
    "contact": {
      "name": "go-grpc-http-rest-microservice-tutorial project",
      "url": "https://github.com/amsokol/go-grpc-http-rest-microservice-tutorial",
      "email": "medium@amsokol.com"
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/todo": {
      "post": {
        "summary": "Create new todo task",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1CreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRequest"
            }
          }
        ],
        "tags": [
          "ToDoService"
        ]
      }
    },
    "/v1/todo/all": {
      "get": {
        "summary": "Read all todo tasks",
        "operationId": "ReadAll",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1ReadAllResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "api",
            "description": "API versioning: it is my best practice to specify version explicitly.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ToDoService"
        ]
      }
    },
    "/v1/todo/{id}": {
      "get": {
        "summary": "Read todo task",
        "operationId": "Read",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1ReadResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique integer identifier of the todo task",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "api",
            "description": "API versioning: it is my best practice to specify version explicitly.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ToDoService"
        ]
      },
      "delete": {
        "summary": "Delete todo task",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1DeleteResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique integer identifier of the todo task to delete",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "api",
            "description": "API versioning: it is my best practice to specify version explicitly.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ToDoService"
        ]
      }
    },
    "/v1/todo/{toDo.id}": {
      "put": {
        "summary": "Update todo task",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1UpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "toDo.id",
            "description": "Unique integer identifier of the todo task",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "ToDoService"
        ]
      },
      "patch": {
        "summary": "Update todo task",
        "operationId": "Update2",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1UpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "toDo.id",
            "description": "Unique integer identifier of the todo task",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "ToDoService"
        ]
      }
    }
  },
  "definitions": {
    "v1CreateRequest": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "toDo": {
          "$ref": "#/definitions/v1ToDo",
          "title": "Task entity to add"
        }
      },
      "title": "Request data to create new todo task"
    },
    "v1CreateResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID of created task"
        }
      },
      "title": "Contains data of created todo task"
    },
    "v1DeleteResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "deleted": {
          "type": "string",
          "format": "int64",
          "title": "Contains number of entities have beed deleted\nEquals 1 in case of succesfull delete"
        }
      },
      "title": "Contains status of delete operation"
    },
    "v1ReadAllResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "toDos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ToDo"
          },
          "title": "List of all todo tasks"
        }
      },
      "title": "Contains list of all todo tasks"
    },
    "v1ReadResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "toDo": {
          "$ref": "#/definitions/v1ToDo",
          "title": "Task entity read by ID"
        }
      },
      "title": "Contains todo task data specified in by ID request"
    },
    "v1ToDo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique integer identifier of the todo task"
        },
        "title": {
          "type": "string",
          "title": "Title of the task"
        },
        "description": {
          "type": "string",
          "title": "Detail description of the todo task"
        },
        "reminder": {
          "type": "string",
          "format": "date-time",
          "title": "Date and time to remind the todo task"
        }
      },
      "title": "Task we have to do"
    },
    "v1UpdateRequest": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "toDo": {
          "$ref": "#/definitions/v1ToDo",
          "title": "Task entity to update"
        }
      },
      "title": "Request data to update todo task"
    },
    "v1UpdateResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "updated": {
          "type": "string",
          "format": "int64",
          "title": "Contains number of entities have beed updated\nEquals 1 in case of succesfull update"
        }
      },
      "title": "Contains status of update operation"
    }
  }
}
